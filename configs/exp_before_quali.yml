# Predict race outcome BEFORE qualifying has happened.
# - Practice data allowed (P1/P2/P3), qualifying features excluded.
# - Strict leakage guards: if any quali-derived column leaks in, fail or drop.

defaults: [] # For Hydra, it means: do not silently import other partials

experiment:
  name: exp_before_quali
  mode: train
  notes: "Ranking with practice + static features only."

inference:
  weekend_mode: pre_quali
  allow_future_leakage: false
  drop_unavailable_features: true
  on_missing_data: impute

features:
  include:
    base_static: ${features.include.base_static}
    weekend_practice: ${features.include.weekend_practice}
    weekend_quali: [] # explicitly disable
    weather_track: ${features.include.weather_track}
  interactions: true
  scaling: standard
  impute: ${features.impute}
  drop_na_threshold: ${features.drop_na_threshold}
  on_missing_feature: error # be strict before quali

split:
  strategy: group_k_fold
  n_splits: 5
  group_key: race_id
  shuffle: false

model:
  name: xgboost
  type: ranking
  params:
    n_estimators: 400 # a bit more trees since signal is weaker without quali
    learning_rate: 0.045
    max_depth: 6
    subsample: 0.9
    colsample_bytree: 0.7
    reg_alpha: 0.0
    reg_lambda: 1.2
    n_jobs: -1
    tree_method: hist
  early_stopping:
    rounds: 75
    metric: ndcg@10
    mode: max

training:
  epochs: 200
  patience: 30

evaluation:
  metrics: [ndcg@10, map@10, spearman, rmse]
  top_k: [1, 3, 5, 10]

logging:
  level: INFO

tracking:
  tags: [exp_before_quali, pre_quali]
